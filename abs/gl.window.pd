#N canvas 329 128 951 613 12;
#X obj 8 14 inlet;
#X obj 8 958 outlet;
#X text 808 912 RI;
#X text 400 754 - Pb: crash when re-create with gl.camera;
#X obj 44 830 ofelia d window-\$0 \; function M.new() ofWindow.addListener("draw"
\, this \, 1000) end \; function M.free() ofWindow.removeListener("draw"
\, this) end \; function M.draw() ofPopView() _maincamera:endCamera()
\; end;
#X f 100;
#X text 106 935 https://forum.openframeworks.cc/t/ofcamera-and-inverted-texture-mapped-image/26398
;
#X text 106 915 Note: Pixel Coordinate is reversed in openGl;
#X text 46 807 ofcamera rendering order is betwween 0 and 1000 Rendring
< 0 and > 1000 will be out of camera (useful for designing GUI), f
121;
#X obj 8 54 ofelia d window \; \; local c = ofCanvas(this) \; local
window = ofWindow() \; local args = c:getArgs() \; local sizeX \, sizeY
\, fps \, create \, autoclear \, posX \, posY \, lighting = args[1]
\, args[2] \, args[3] \, args[4] \, args[5] \, args[6] \, args[7] \;
local debug \, mode \, ortho \, fov = 0 \, 0 \, 0 \, 30 \; \; function
M.new() \; ofWindow.addListener("setup" \, this) \; ofWindow.addListener("draw"
\, this \, 0) if args[1] == nil then sizeX = 500 end \; if args[1]
== nil then sizeX = 500 end \; if args[2] == nil then sizeY = 500 end
\; if args[3] == nil then fps = 30 end \; if args[4] == nil then create
= "no" end \; if args[5] == nil then autoclear = true end \; if args[6]
== nil then posX = 10 end \; if args[7] == nil then posY = 10 end \;
if create == "create" or create == 1 then M.create() end \; if create
== "fullscreen" or create == 2 then M.create() M.fullscreen(1) end
end \; function M.free() \; ofWindow.removeListener("setup" \, this)
ofWindow.removeListener("draw" \, this) ofWindow.removeListener("update"
\, this) end \; \; function M.setup() \; ofSetBackgroundAuto(true)
\; ofSetWindowPosition (posX \, posY) \; ofSetWindowShape(sizeX \,
sizeY) \; ofSetFrameRate(fps) \; ofSetBackgroundColor(60) \; ofSetDataPathRoot
".." \; ofSetBackgroundAuto(autoclear) \; if type (_maincamera) ==
"nil" then _maincamera = ofCamera() end \; if type (_c_position) ==
"nil" then _maincamera:setPosition(0 \, 0 \, 400) end end \; \; function
M.create() window:create() end \; function M.destroy() window:destroy()
end \; function M.framerate(f) fps = f ofSetFrameRate(fps) end \; function
M.dimen(list) if ofWindow.exists then ofSetWindowShape(list[1] \, list[2])
end end \; function M.position(list) if ofWindow.exists then ofSetWindowPosition
(list[1] \, list[2]) end end \; function M.orientation(l) if ofWindow.exists
then ofSetOrientation (1+l[1] \, ofToBool(l[2])) end end \; function
M.color(bgcolor) if ofWindow.exists then ofSetBackgroundColor(bgcolor[1]
\, bgcolor[2] \, bgcolor[3]) end end \; function M.cursor(float) if
ofWindow.exists then if float > 0 then ofShowCursor() else ofHideCursor()
end end end \; function M.lighting(float) \; if ofWindow.exists then
if float > 0 then ofEnableLighting() _lighting = 1 else ofDisableLighting()
_lighting = 0 end end end \; function M.fullscreen(float) if ofWindow.exists
then ofSetFullscreen(ofToBool(float)) end end \; function M.autoclear(float)
autoclear = ofToBool(float) if ofWindow.exists then ofSetBackgroundAuto(autoclear)
end end \; function M.clear(l) if ofWindow.exists then ofClear(l[1]
\, l[2] \, l[3]) end end \; function M.get() if ofWindow.exists then
width = ofGetWindowWidth() height = ofGetWindowHeight() \; framerate
= ofGetFrameRate() return ofTable (width \, height \, framerate) end
end \; \; function M.draw() \; ofPushView() \; _maincamera:beginCamera()
\; end \;;
#X f 123;
#X connect 0 0 8 0;
#X connect 8 0 1 0;
