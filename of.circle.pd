#N canvas 408 47 842 640 12;
#X obj 31 14 inlet;
#X obj 31 545 outlet;
#X obj 93 14 inlet;
#X obj 163 14 inlet;
#X text 785 536 RI;
#X msg 163 40 res \$1;
#X msg 93 40 size \$1;
#X obj 31 65 ofelia d circle-\$0 \; local c = ofCanvas(this) \; local
args = c:getArgs() \; local node\$0 = ofNode() \; local size \, res
\, drawmode \, strokeweight \, debug = args[1] \, args[2] \, args[3]
\, args[4] \; local position \, orientation \, scale \, lookat = ofVec3f()
\, ofVec3f() \, ofVec3f(1 \, 1 \, 1) \, ofVec3f() \; \; function M.new()
\; if args[1] == nil then size = 50 end \; if args[2] == nil then res
= 20 end \; if args[3] == nil then drawmode = "fill" end \; if args[4]
== nil then strokeweight = 1 end \; end \; \; function M.size(f) size=f
end \; function M.res(f) res=f end \; function M.draw(s) drawmode =
s end \; function M.stroke(f) strokeweight = f end \; function M.list(l)
size \, res \, drawmode \, strokeweight = (table.unpack(l)) end \;
function M.debug(f) debug = f end \; function M.position(l) position:set
(table.unpack(l)) node\$0:setPosition(position:vec3()) end \; function
M.orientation(l) orientation:set (table.unpack(l)) node\$0:setOrientation(orientation:vec3())
end \; function M.scale(l) scale:set (table.unpack(l)) node\$0:setScale(scale:vec3())
end \; function M.lookat(l) lookat:set (table.unpack(l)) node\$0:lookAt(lookat:vec3())
end \; \; function M.bang() \; ofSetLineWidth(strokeweight) \; if drawmode
== "line" then ofNoFill() end \; node\$0:transformGL() \; ofSetCircleResolution(math.abs(res))
\; ofDrawCircle(0 \, 0 \, 0 \, size) \; node\$0:restoreTransformGL()
\; if debug == 1 then node\$0:draw() end \; ofFill() \; return anything
\; end \;;
#X f 111;
#X connect 0 0 7 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
