#N canvas 395 79 630 640 12;
#X obj 31 24 inlet;
#X obj 90 22 inlet;
#X obj 160 22 inlet;
#X obj 230 22 inlet;
#X obj 300 22 inlet;
#X text 466 622 RI;
#X text 51 593 Todo: add HSB with arguments;
#X obj 31 626 outlet;
#X obj 579 621 outlet;
#X msg 90 48 red \$1;
#X msg 160 48 green \$1;
#X msg 230 48 blue \$1;
#X msg 300 48 alpha \$1;
#X obj 31 75 ofelia d -c12 color-\$0 \; local log = ofLog("of.color")
\; local c = ofCanvas(this) \; local args = c:getArgs() \; local color
= ofColor() \; local outlet = ofOutlet(this) \; \; function M.new()
\; if args[1] == nil then color.r = 255 else color.r = args[1] end
\; if args[2] == nil then color.g = 255 else color.g = args[2] end
\; if args[3] == nil then color.b = 255 else color.b = args[3] end
\; if args[4] == nil then color.a = 255 else color.a = args[4] end
\; if #args == 1 then \; log:error("requires 3 (rgb) or 4 (rgba) creation
argument") \; end \; end \; \; function M.red(f) color.r = ofClamp(f
\, 0 \, 255) end \; function M.green(f) color.g = ofClamp(f \, 0 \,
255) end \; function M.blue(f) color.b = ofClamp(f \, 0 \, 255) end
\; function M.alpha(f) color.a = ofClamp(f \, 0 \, 255) end \; function
M.brightness(f) color:setBrightness(f) end \; function M.saturation(f)
color:setSaturation(f) end \; function M.hue(f) color:setHue(f) end
\; function M.hex(s) color:setHex(tonumber(s:gsub("#" \, "") \, 16))
end \; function M.hsb(l) color:setHsb(table.unpack(l)) end \; function
M.invert() color:invert() end \; function M.list(l) color:set(table.unpack(l))end
\; function M.get() outlet:outletList(1 \, ofTable (color.r \, color.g
\, color.b \, color.a \, color:getHue() \, color:getSaturation() \,
color:getBrightness() \, color:getHex()))end \; \; function M.bang()
\; ofSetColor(color) \; outlet:outletBang(0) \; end \;;
#X f 85;
#X connect 0 0 13 0;
#X connect 1 0 9 0;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 4 0 12 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 13 0;
#X connect 13 0 7 0;
#X connect 13 1 8 0;
