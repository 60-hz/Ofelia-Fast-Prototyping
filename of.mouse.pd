#N canvas 292 42 869 736 12;
#X obj 49 -22 inlet;
#X obj 49 679 list split 2;
#X obj 49 725 outlet;
#X obj 156 725 outlet;
#X obj 89 702 route bang;
#X text 739 656 R.I;
#X obj 49 11 ofelia d mouse\$0 \; local log = ofLog("ofMouseMoved")
\; local canvas = ofCanvas(this) \; local order \, enabled = 50 \,
true \; local x \, y \, z \; \; function M.new() \; local args = canvas:getArgs()
\; if #args == 1 then order = args[1] end \; if #args == 2 then order
\, enabled = args[1] \, args[2] ~= 0 \; end \; ofWindow.addListener("mouseMoved"
\, this \, order) \; ofWindow.addListener("mousePressed" \, this \,
order) \; ofWindow.addListener("mouseReleased" \, this \, order) \;
ofWindow.addListener("mouseDragged" \, this \, order) \; if _c_position
== nil then _c_position = ofVec3f(0 \, 0 \, 0) end \; end \; \; function
M.setOrder(f) \; order = f \; end \; \; function M.setEnabled(b) \;
enabled = b ~= 0 \; end \; \; function M.free() \; ofWindow.removeListener("mouseMoved"
\, this) \; ofWindow.removeListener("mousePressed" \, this) \; ofWindow.removeListener("mouseReleased"
\, this) \; ofWindow.removeListener("mouseDragged" \, this) \; end
\; function M.mouseMoved(e) \; return (M.mapxy(ofTable(e.x \, e.y)))
end \; function M.mouseDragged(e) \; return (M.mapxy(ofTable(e.x \,
e.y))) end \; function M.mousePressed(e) \; return (M.mapxy(ofTable(e.x
\, e.y \, e.button + 1))) end \; function M.mouseReleased(e) \; return
(M.mapxy(ofTable(e.x \, e.y \, 0))) end \; function M.mapxy(l) \; if
order < 0 or order > 1000 then x = l[1] y = l[2] else \; x= _c_position.x
+(ofMap (l[1] \, 0 \, ofGetWidth() \, -ofGetWidth()*0.5 \, ofGetWidth()*0.5))
\; y= _c_position.y +(ofMap (l[2] \, 0 \, ofGetHeight() \, ofGetHeight()*0.5
\, -ofGetHeight()*0.5)) end \; z = l[3] \; return ofTable(x \, y \,
z)end \;;
#X f 110;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 1 1 4 0;
#X connect 4 1 3 0;
#X connect 6 0 1 0;
