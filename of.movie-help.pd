#N canvas 230 107 827 671 12;
#X declare -lib ofelia;
#X obj 9 10 cnv 15 600 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X msg 172 235 get;
#X floatatom 239 468 5 0 0 0 isplaying - -;
#X floatatom 263 498 5 0 0 0 currentframe - -;
#X floatatom 310 555 5 0 0 0 width - -;
#X floatatom 333 585 5 0 0 0 height - -;
#X floatatom 216 354 5 0 0 0 - - -;
#X floatatom 286 525 5 0 0 0 totalframes - -;
#X floatatom 216 438 5 0 0 0 isloaded - -;
#X obj 467 42 declare -lib ofelia;
#X floatatom 357 610 5 0 0 0 duration - -;
#X text 28 15 A simple movie player (windows user might need to install
"k-lite codec pack" to read movies), f 52;
#X obj 521 16 of.window 1;
#X text 28 47 Arguments: file \, autostart \, loopmode \, speed;
#X obj 30 93 of.draw;
#X msg 93 145 pause;
#X obj 170 144 openpanel;
#X obj 170 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 300 98 volume 1;
#X msg 170 173 open \$1;
#X msg 93 216 close;
#X msg 298 301 speed -1;
#X text 374 98 sound volume 0 -1;
#X floatatom 298 148 5 0 0 0 - - -;
#X msg 298 172 position \$1;
#X obj 301 129 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X msg 93 92 open data/video.mov;
#X text 348 232 loop on;
#X msg 298 206 frame 30;
#X text 363 206 jump to frame...;
#X msg 171 203 update;
#X msg 93 122 play;
#X msg 93 192 stop;
#X obj 216 414 unpack 0 0 0 0 0 0 0 0, f 24;
#X floatatom 381 632 5 0 0 0 frame/sec - -;
#X msg 93 168 resume;
#X msg 298 278 speed 0.5;
#X text 192 122 open file...;
#X msg 547 159 position 1 \, speed -1 \, play;
#X msg 537 110 position 0 \, speed 1 \, play;
#X text 533 83 play from start at speed 1;
#X text 542 137 play from end in reverse (speed -1);
#X obj 537 290 t a;
#N canvas 530 102 646 542 Encoding_information 0;
#X text 45 108 ffmpeg -i input.mp4 -vcodec libx264 -x264-params keyint=2
output.mp4, f 75;
#X text 45 214 -t duration (input/output), f 75;
#X text 45 243 -to hh:mm:ss, f 75;
#X text 45 142 Cut a sequence command (before -i):;
#X text 45 171 -ss hh:mm:ss (secs_to_skip) When used as an input option
(before -i) \, seeks in this input file to position., f 75;
#X text 45 312 -vf scale=640:480 (change resolution \, 640:-1 to keep
aspect ratio), f 75;
#X text 45 419 ffmpeg -ss hh:mm:ss -to hh:mm:ss -i input.mp4 -vf scale=640:480
-preset slow -crf 18 -vcodec libx264 -x264-params keyint=2 output.mp4
, f 75;
#X text 45 341 -preset slow -crf 18 (Very high quality), f 75;
#X text 45 390 Example:, f 75;
#X text 45 282 Resize:;
#X text 45 89 Good ffmpeg encoding with smooth framerate command:;
#X text 45 361 -ar 44100 (audiorate), f 75;
#X text 45 16 For smooth playback and frame by frame \, use PhotoJPG/Animation/Mjpeg
codec or set every frame as keyframe in your video exporter. On Apple
computer \, use Apple ProRes if possible., f 72;
#X text 46 485 -filter:v "setpts=0.5*PTS";
#X text 46 465 Two times faster:;
#X restore 504 476 pd Encoding_information;
#X msg 298 255 speed 2;
#X text 358 254 double speed;
#X text 371 279 half speed;
#X text 368 301 play backward;
#X text 204 236 get infos;
#X text 223 396 <- get infos as list;
#N canvas 975 420 305 198 Play_from->to_with_line 0;
#X obj 24 85 line;
#X floatatom 24 109 5 0 0 0 - - -;
#X text 20 30 ex: play from frame 0 to 123 in 2sec;
#X text 65 110 go to frame...;
#X msg 24 54 0 \, 100 2000;
#X connect 0 0 1 0;
#X connect 4 0 0 0;
#X restore 503 443 pd Play_from->to_with_line;
#X text 338 148 go to position from 0 to 1;
#X obj 30 379 of.movie data/video.mov, f 27;
#X msg 298 231 loop 1;
#N canvas 313 340 434 409 Play_with_counter(perfect_loop) 0;
#X obj 192 114 metro 40;
#X obj 192 83 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 192 151 seq.counter 0 99;
#X floatatom 192 199 5 0 0 0 - - -;
#X text 61 18 using this may remove any cuts of the "play" and "loop
1" message, f 32;
#X obj 66 148 i, f 6;
#X obj 66 174 + 1, f 6;
#X obj 66 198 mod 99;
#X floatatom 66 243 5 0 0 0 - - -;
#X obj 66 114 metro 40;
#X obj 66 83 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X text 62 271 native PureData counter;
#X text 236 198 frame loop from 0 to 99;
#X text 111 241 frame nb;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 5 1;
#X connect 7 0 8 0;
#X connect 9 0 5 0;
#X connect 10 0 9 0;
#X restore 504 413 pd Play_with_counter(perfect_loop);
#X text 256 355 Go to frame... need to "pause" or "play" with some
codec (no audio), f 68;
#X text 383 170 (no audio);
#X obj 30 528 of.plane 400 300;
#X text 656 215 from frame 0 to 50;
#X text 676 244 from frame 50 to 100;
#X msg 582 275 fullrange;
#X text 660 274 from 0 to totalframe;
#X text 563 188 Set a part to play (in frame);
#X msg 572 213 range 0 20;
#X msg 582 243 range 20 40;
#X connect 1 0 52 0;
#X connect 6 0 52 1;
#X connect 14 0 52 0;
#X connect 15 0 52 0;
#X connect 16 0 19 0;
#X connect 17 0 16 0;
#X connect 18 0 52 0;
#X connect 19 0 52 0;
#X connect 20 0 52 0;
#X connect 21 0 52 0;
#X connect 23 0 24 0;
#X connect 24 0 52 0;
#X connect 25 0 23 0;
#X connect 26 0 52 0;
#X connect 28 0 52 0;
#X connect 31 0 52 0;
#X connect 32 0 52 0;
#X connect 33 0 8 0;
#X connect 33 1 2 0;
#X connect 33 2 3 0;
#X connect 33 3 7 0;
#X connect 33 4 4 0;
#X connect 33 5 5 0;
#X connect 33 6 10 0;
#X connect 33 7 34 0;
#X connect 35 0 52 0;
#X connect 36 0 52 0;
#X connect 38 0 42 0;
#X connect 39 0 42 0;
#X connect 42 0 52 0;
#X connect 44 0 52 0;
#X connect 52 0 57 0;
#X connect 52 1 33 0;
#X connect 53 0 52 0;
#X connect 60 0 42 0;
#X connect 63 0 42 0;
#X connect 64 0 42 0;
