#N canvas 429 65 842 681 12;
#X declare -lib ofelia;
#X obj 9 10 cnv 15 600 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X msg 95 245 get;
#X floatatom 267 468 5 0 0 0 isplaying - -;
#X floatatom 291 498 5 0 0 0 currentframe - -;
#X floatatom 338 555 5 0 0 0 pixel_width - -;
#X floatatom 362 585 5 0 0 0 pixel_height - -;
#X floatatom 244 354 5 0 0 0 - - -;
#X floatatom 314 525 5 0 0 0 totalframes - -;
#X floatatom 244 438 5 0 0 0 isloaded - -;
#X obj 467 42 declare -lib ofelia;
#X floatatom 386 610 5 0 0 0 duration - -;
#X text 28 47 Arguments: file \, autostart \, loopmode \, speed;
#X obj 30 93 of.draw;
#X msg 93 145 pause;
#X obj 170 144 openpanel;
#X obj 170 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 170 173 open \$1;
#X msg 93 216 close;
#X msg 298 306 speed -1;
#X floatatom 298 138 5 0 0 0 - - -;
#X msg 298 162 position \$1;
#X obj 301 119 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 348 215 loop on;
#X msg 298 189 frame 30;
#X text 363 189 jump to frame...;
#X msg 171 203 update;
#X msg 93 122 play;
#X msg 93 192 stop;
#X floatatom 408 632 5 0 0 0 frame/sec - -;
#X msg 93 168 resume;
#X msg 298 283 speed 0.5;
#X text 192 122 open file...;
#X msg 537 140 position 0 \, speed 1 \, play;
#X text 533 113 play from start at speed 1;
#X obj 537 290 t a;
#X msg 298 260 speed 2;
#X text 358 259 double speed;
#X text 371 284 half speed;
#X text 368 306 play backward;
#X text 127 246 get infos;
#X text 250 396 <- get infos as list;
#X text 338 138 go to position from 0 to 1;
#X text 284 355 Go to frame... need to "pause" or "play" with some
codec (no audio), f 68;
#X text 383 160 (no audio);
#X msg 582 265 fullrange;
#X text 660 264 from 0 to totalframe;
#X text 563 178 Set a part to play (in frame);
#X msg 572 203 range 0 20;
#X obj 447 21 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 28 15 A simple movie player, f 52;
#X text 468 589 Note: the movie player might behave a bit differently
under different systems, f 39;
#X msg 298 214 loop 1;
#X text 348 238 loop off;
#X msg 298 237 loop 0;
#N canvas 834 326 305 230 Play_from...to...with_[line] 0;
#X obj 24 85 line;
#X floatatom 24 119 5 0 0 0 - - -;
#X text 65 120 go to frame...;
#X msg 24 54 0 \, 100 2000;
#X text 20 30 ex: play from frame 0 to 100 in 2sec;
#X connect 0 0 1 0;
#X connect 3 0 0 0;
#X restore 463 443 pd Play_from...to...with_[line];
#X obj 244 414 unpack 0 0 0 0 0 0 0 0, f 24;
#N canvas 530 102 646 542 Encoding_information_for_smooth_playback
0;
#X text 45 214 -t duration (input/output), f 75;
#X text 45 243 -to hh:mm:ss, f 75;
#X text 45 171 -ss hh:mm:ss (secs_to_skip) When used as an input option
(before -i) \, seeks in this input file to position., f 75;
#X text 45 312 -vf scale=640:480 (change resolution \, 640:-1 to keep
aspect ratio), f 75;
#X text 45 341 -preset slow -crf 18 (Very high quality), f 75;
#X text 45 361 -ar 44100 (audiorate), f 75;
#X text 46 485 -filter:v "setpts=0.5*PTS";
#X text 45 16 For smooth playback (frame by frame) \, set every frame
as keyframe in your video exporter. On Apple computer \, use Apple
ProRes if possible., f 72;
#X text 45 98 ffmpeg -i input.mp4 -preset slow -crf 18 -vcodec libx264
-x264-params keyint=1 output.mp4, f 75;
#X text 45 419 ffmpeg -ss hh:mm:ss -to hh:mm:ss -i input.mp4 -vf scale=640:480
-preset slow -crf 18 -vcodec libx264 -x264-params keyint=1 output.mp4
, f 75;
#X text 45 69 ffmpeg encoding with smooth framerate command:;
#X text 45 142 ffmpeg Cut a sequence command (before -i):;
#X text 45 282 ffmpeg resize:;
#X text 45 390 ffmpeg rxample:, f 75;
#X text 46 465 Play two times faster:;
#X restore 464 476 pd Encoding_information_for_smooth_playback;
#N canvas 577 303 386 409 loop_with_no_cut_with_[counter] 0;
#X obj 212 154 metro 40;
#X obj 212 123 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 212 279 5 0 0 0 - - -;
#X text 61 18 using this may remove any cuts of the "play" and "loop
1" message, f 32;
#X obj 66 188 i, f 6;
#X obj 66 214 + 1, f 6;
#X obj 66 238 mod 99;
#X floatatom 66 283 5 0 0 0 - - -;
#X obj 66 154 metro 40;
#X obj 66 123 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 78 326 frame loop from 0 to 99;
#X obj 212 211 counter 0 99;
#X text 208 100 counter object:;
#X text 4 102 native PureData count:;
#X text 158 153 or;
#X connect 0 0 11 0;
#X connect 1 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 4 1;
#X connect 6 0 7 0;
#X connect 8 0 4 0;
#X connect 9 0 8 0;
#X connect 11 0 2 0;
#X restore 463 413 pd loop_with_no_cut_with_[counter];
#X text 30 555 draw video on a plane;
#X obj 468 19 of.window 1 640 360;
#X obj 30 528 of.plane 640 360;
#X obj 30 453 of.ortho 1;
#X text 36 431 no perspective;
#X text 36 411 ortho =;
#X text 656 205 from frame 0 to 20;
#X msg 582 233 range 40 60;
#X text 676 234 from frame 40 to 60;
#X msg 300 88 volume 0.5;
#X text 384 88 sound volume 0-1;
#X msg 93 92 open data/thepunishment.mp4;
#X text 284 368 encode every keyframe for smooth playback, f 68;
#X obj 30 379 of.movie data/thepunishment.mp4;
#X text 467 558 https://codecguide.com/, f 52;
#X text 467 518 Note: Windows user might need to install the free "k-lite
codec pack" to read movies:, f 52;
#X connect 1 0 71 0;
#X connect 6 0 71 1;
#X connect 12 0 71 0;
#X connect 13 0 71 0;
#X connect 14 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 71 0;
#X connect 17 0 71 0;
#X connect 18 0 71 0;
#X connect 19 0 20 0;
#X connect 20 0 71 0;
#X connect 21 0 19 0;
#X connect 23 0 71 0;
#X connect 26 0 71 0;
#X connect 27 0 71 0;
#X connect 29 0 71 0;
#X connect 30 0 71 0;
#X connect 32 0 34 0;
#X connect 34 0 71 0;
#X connect 35 0 71 0;
#X connect 44 0 34 0;
#X connect 47 0 34 0;
#X connect 48 0 59 0;
#X connect 51 0 71 0;
#X connect 53 0 71 0;
#X connect 55 0 8 0;
#X connect 55 1 2 0;
#X connect 55 2 3 0;
#X connect 55 3 7 0;
#X connect 55 4 4 0;
#X connect 55 5 5 0;
#X connect 55 6 10 0;
#X connect 55 7 28 0;
#X connect 61 0 60 0;
#X connect 65 0 34 0;
#X connect 67 0 71 0;
#X connect 69 0 71 0;
#X connect 71 0 61 0;
#X connect 71 1 55 0;
