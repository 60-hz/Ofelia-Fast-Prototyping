#N canvas 521 79 620 630 12;
#X declare -lib ofelia;
#X obj 9 10 cnv 15 600 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X floatatom 69 441 5 0 0 0 - - -;
#X obj 29 470 of.rotate;
#X obj 29 91 of.draw;
#X obj 29 498 of.sphere 500 100 line;
#X msg 123 193 dimen 640 480;
#X msg 123 91 listdev;
#X msg 124 156 close;
#X msg 125 226 get;
#X msg 123 123 open 0;
#X text 180 157 close device;
#X text 165 226 get informations to right outlet;
#X text 231 193 change pixel size;
#X obj 462 45 declare -lib ofelia;
#X text 28 43 Arguments : deviceID \, width \, height;
#X text 186 123 Open device ID;
#X text 185 92 Get a device list (need a way to catch ID);
#X obj 518 19 of.window 1;
#X text 28 23 A Video grabber with pixel and texture access (experimental)
;
#X obj 80 417 print pix;
#N canvas 530 212 589 566 Set_buffer_&_Pixels 0;
#X floatatom 119 147 5 0 0 0 - - -;
#X msg 135 207 update;
#X msg 183 356 clear;
#X text 203 54 (0= Grayscale \, 1 =rgb \, 2 = rgba);
#X msg 96 110 fill 0 0 0;
#X floatatom 157 252 5 0 0 0 - - -;
#X text 230 356 clear all pixels = careful \, need re-allocate!;
#X text 183 111 fill all black (rgb or rgba if colortype =2);
#N canvas 418 393 528 305 Work_with_alpha 0;
#X obj 56 207 outlet;
#X floatatom 85 116 5 0 0 0 - - -;
#X msg 56 54 allocate 10 10 2 \, fill 200 0 0 50 \, draw 1 -150 -150
10 300 300;
#X text 55 30 allocate colortype =2 \, fill rgba (alpha = 50) \, draw
300x300px, f 67;
#X text 131 116 need after \, and update (carefull of the values!)
;
#X msg 85 142 setpixel \$1 0 255 255 255 150 \, update;
#X text 357 139 alpha = 150;
#X connect 1 0 5 0;
#X connect 2 0 0 0;
#X connect 5 0 0 0;
#X restore 184 325 pd Work_with_alpha;
#X floatatom 205 395 5 0 0 0 - - -;
#X msg 205 419 grab \$1 100 100 100;
#X text 107 88 2/ fill it (clear) al pixels to black;
#X msg 119 172 setpixel \$1 0 255 255 255 255;
#X text 163 144 Set pixels X \, Y \, r \, g \, b \, a;
#X text 203 252 set \, and update (carefull of the values!);
#X text 205 39 Width \, Height \, colortype;
#X text 68 10 1/ allocate pixel buffer size;
#X text 192 206 need after set pixel;
#X msg 157 278 setpixel \$1 0 255 0 0;
#X msg 71 44 allocate 10 20 1;
#X obj 22 452 send videotexture;
#X connect 0 0 12 0;
#X connect 1 0 20 0;
#X connect 2 0 20 0;
#X connect 4 0 20 0;
#X connect 5 0 18 0;
#X connect 8 0 20 0;
#X connect 9 0 10 0;
#X connect 10 0 20 0;
#X connect 12 0 20 0;
#X connect 18 0 20 0;
#X connect 19 0 20 0;
#X restore 435 247 pd Set_buffer_&_Pixels;
#N canvas 501 219 655 352 draw_on_screen 0;
#X floatatom 41 29 5 0 0 0 - - -;
#X msg 70 114 drawsubsection 1 100 0 100 100 120 200;
#X msg 76 251 anchorpoint \$1 \$1;
#X floatatom 76 223 5 0 0 0 - - -;
#X text 117 223 change anchor point;
#X text 217 187 Desactivate drawsubsection;
#X text 149 83 Desactivate draw;
#X msg 41 54 draw 1 \$1 0 0 100 100;
#X msg 59 83 draw 0 0;
#X msg 73 187 drawsubsection 0 0;
#X text 201 53 activation \, X \, Y \, Z \, width \, height;
#X text 82 27 pos X;
#X text 37 4 draw image buffer on screen;
#N canvas 502 246 589 401 Click_here_to_learn_more_about_draw_subsection
0;
#X obj 25 231 of.mouse;
#X obj 25 258 spigot;
#X obj 100 243 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 126 240 -> activate this to scroll image with mouse on window
;
#X obj 25 310 outlet;
#X text 17 67 0/1: active \; X: position to draw cropped image at \;
Y: position to draw cropped image at \; W: Width of subsection to draw
\; H: Height of subsection to draw \; X: position in image to begin
cropping from \; Y: position in image to begin cropping from \;, f
49;
#X text 15 14 Draws a subsection of the image \;, f 80;
#X text 15 44 This functions like a clipping mask. Does not altering
any pixel data \;, f 80;
#X text 21 198 Exemple:;
#X msg 25 286 drawsubsection 1 -100 110 200 100 \$1 \$2;
#X text 312 282 active \, posX \, posY \, witdh \, height \, cropfromX
\, cropfromY, f 42;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 1 1;
#X connect 9 0 4 0;
#X restore 73 143 pd Click_here_to_learn_more_about_draw_subsection
;
#X text 349 112 active \, posX \, posY \, witdh \, height \, cropfromX
\, cropfromY, f 42;
#X obj 20 279 send videotexture;
#X connect 0 0 7 0;
#X connect 1 0 15 0;
#X connect 2 0 15 0;
#X connect 3 0 2 0;
#X connect 7 0 15 0;
#X connect 8 0 15 0;
#X connect 9 0 15 0;
#X connect 13 0 15 0;
#X restore 435 194 pd draw_on_screen;
#N canvas 618 147 464 284 pixels_process 0;
#X msg 39 168 crop 100 100 100 100;
#X msg 39 194 cropfrom img 100 100 300 300;
#X msg 40 90 mirror 1 0;
#X text 124 90 vertical \, horizontal;
#X text 124 115 rotate by 90Â°;
#X text 144 141 resize width \, height;
#X text 152 65 0= Grayscale \, 1 =rgb \, 2 = rgba;
#X text 245 193 to do...;
#X text 190 168 width \, height \, posX \, posY (careful);
#X msg 40 65 setimagetype \$1;
#X obj 40 42 hradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X msg 40 141 resize 100 100;
#X msg 24 15 auto 0;
#X text 79 13 Need auto 0 mode;
#X msg 40 115 rotate 1;
#X obj 8 241 send videotexture;
#X connect 0 0 15 0;
#X connect 1 0 15 0;
#X connect 2 0 15 0;
#X connect 9 0 15 0;
#X connect 10 0 9 0;
#X connect 11 0 15 0;
#X connect 12 0 15 0;
#X connect 14 0 15 0;
#X restore 435 222 pd pixels_process;
#X msg 339 162 update;
#X msg 340 133 auto \$1;
#X obj 340 111 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 393 164 manual frame update;
#X text 400 133 auto frame update (default 1);
#X msg 437 290 filter \$1;
#X obj 437 272 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 437 322 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 437 340 warp \$1;
#X floatatom 198 469 5 0 0 0 - - -;
#X msg 198 497 texturemap 0 0 \$1 \$1;
#X obj 29 313 of.videotexture;
#X text 455 320 texture warp;
#X text 509 274 0= nearest;
#X text 509 290 1=linear (default);
#X msg 431 411 getpixel 100 100;
#X text 431 382 Get pixels color at X \, Y to middle outlet, f 37
;
#X obj 402 436 send videotexture;
#X obj 123 267 receive videotexture;
#X text 237 471 texture mapping;
#X obj 131 381 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 172 380 5 0 0 0 - - -;
#X floatatom 213 380 5 0 0 0 - - -;
#X text 169 395 width;
#X text 212 395 height;
#X text 126 395 init;
#X obj 131 349 unpack 0 0 0 0, f 18;
#X floatatom 254 380 5 0 0 0 - - -;
#X text 260 395 ratio;
#X text 140 331 -> get infos as a list;
#X text 147 312 Argumentss: deviceID \, width heigth;
#X text 108 443 -> rotation on Y axis;
#X obj 29 533 of.plane 200 200;
#X text 154 533 -> draw video on a plane (width \, height = 200);
#X connect 1 0 2 2;
#X connect 2 0 4 0;
#X connect 3 0 34 0;
#X connect 4 0 55 0;
#X connect 5 0 34 0;
#X connect 6 0 34 0;
#X connect 7 0 34 0;
#X connect 8 0 34 0;
#X connect 9 0 34 0;
#X connect 23 0 34 0;
#X connect 24 0 34 0;
#X connect 25 0 24 0;
#X connect 28 0 40 0;
#X connect 29 0 28 0;
#X connect 30 0 31 0;
#X connect 31 0 40 0;
#X connect 32 0 33 0;
#X connect 33 0 55 0;
#X connect 34 0 2 0;
#X connect 34 1 19 0;
#X connect 34 2 49 0;
#X connect 38 0 40 0;
#X connect 41 0 34 0;
#X connect 49 0 43 0;
#X connect 49 1 44 0;
#X connect 49 2 45 0;
#X connect 49 3 50 0;
